{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\danqw\\\\OneDrive\\\\Desktop\\\\school\\\\DB\\\\Airline-Ticketing-Service\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import { BrowserRouter as Router, Navigate, Redirect} from 'react-router-dom';\n// import { useEffect, useState } from 'react';\n// import Navbar from './Components/Navbar';\n// import LoginForm from './Components/LoginForm';\n// import RoutesConfig from './Routes'; \n// import './App.css';\n// import FlightSearch from './Components/FlightSearch';\n\n// function App() {\n\n//   const [isLoggedIn, setLoggedIn] = useState(false);\n//   const [userType, setUserType] = useState('');\n//   // const navigate = useNavigate();\n\n//   const handleLogin = async () => {\n//     setLoggedIn(true);\n\n//     const response = await fetch('/getUserType', {\n//       method: 'GET',\n//     });\n\n//     if (response.status === 200){\n//       console.log(\"ASDASD\");\n//       const responseData = await response.json();\n//       setUserType(responseData['userType']);\n//     }\n//   };\n\n//   const handleLogout = () => {\n\n//     setLoggedIn(false);\n//     fetch('/logout', {\n//       method: 'POST',\n//     });\n\n//     // navigate('/LoginForm');\n\n//     return <Navigate to=\"/LoginForm\" replace/>\n//   };\n\n//   return (\n//     <div>\n//       <Router>\n\n//         <Navbar isLoggedIn={isLoggedIn ? true : false} onLogout={handleLogout} userType={userType}/>\n\n//         <RoutesConfig isLoggedIn = {isLoggedIn ? true : false} handleLogin= {handleLogin} />\n//       </Router>\n//     </div>\n//   );\n// }\n// export default App;\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Navigate, Routes, Route } from 'react-router-dom';\nimport LoginForm from './Components/LoginForm';\nimport Navbar from './Components/Navbar';\nimport RoutesConfig from './Routes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoggedIn, setLoggedIn] = useState(false);\n  const [userType, setUserType] = useState('');\n  const handleLogin = async () => {\n    setLoggedIn(true);\n\n    // Simulated fetch, replace it with your actual logic\n    setUserType('userType');\n  };\n  const handleLogout = () => {\n    setLoggedIn(false);\n    // Simulated fetch, replace it with your actual logout logic\n    // fetch('/logout', {\n    //   method: 'POST',\n    // });\n\n    // Redirect to the login page\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/LoginForm\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 12\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        isLoggedIn: isLoggedIn,\n        onLogout: handleLogout,\n        userType: userType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/*\",\n          element: /*#__PURE__*/_jsxDEV(RoutesConfig, {\n            isLoggedIn: isLoggedIn,\n            handleLogin: handleLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/LoginForm\",\n          element: /*#__PURE__*/_jsxDEV(LoginForm, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"/9uT4c8jsAxWs3jbr1wZYItUklA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Navigate","Routes","Route","LoginForm","Navbar","RoutesConfig","jsxDEV","_jsxDEV","App","_s","isLoggedIn","setLoggedIn","userType","setUserType","handleLogin","handleLogout","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","children","onLogout","path","element","_c","$RefreshReg$"],"sources":["C:/Users/danqw/OneDrive/Desktop/school/DB/Airline-Ticketing-Service/frontend/src/App.js"],"sourcesContent":["\n// import { BrowserRouter as Router, Navigate, Redirect} from 'react-router-dom';\n// import { useEffect, useState } from 'react';\n// import Navbar from './Components/Navbar';\n// import LoginForm from './Components/LoginForm';\n// import RoutesConfig from './Routes'; \n// import './App.css';\n// import FlightSearch from './Components/FlightSearch';\n\n\n// function App() {\n\n//   const [isLoggedIn, setLoggedIn] = useState(false);\n//   const [userType, setUserType] = useState('');\n//   // const navigate = useNavigate();\n\n  \n//   const handleLogin = async () => {\n//     setLoggedIn(true);\n\n//     const response = await fetch('/getUserType', {\n//       method: 'GET',\n//     });\n\n//     if (response.status === 200){\n//       console.log(\"ASDASD\");\n//       const responseData = await response.json();\n//       setUserType(responseData['userType']);\n//     }\n//   };\n\n//   const handleLogout = () => {\n\n//     setLoggedIn(false);\n//     fetch('/logout', {\n//       method: 'POST',\n//     });\n\n//     // navigate('/LoginForm');\n\n//     return <Navigate to=\"/LoginForm\" replace/>\n//   };\n\n\n\n\n//   return (\n//     <div>\n//       <Router>\n      \n//         <Navbar isLoggedIn={isLoggedIn ? true : false} onLogout={handleLogout} userType={userType}/>\n\n//         <RoutesConfig isLoggedIn = {isLoggedIn ? true : false} handleLogin= {handleLogin} />\n//       </Router>\n//     </div>\n//   );\n// }\n// export default App;\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Navigate, Routes, Route } from 'react-router-dom';\nimport LoginForm from './Components/LoginForm';\nimport Navbar from './Components/Navbar';\nimport RoutesConfig from './Routes';\n\nfunction App() {\n  const [isLoggedIn, setLoggedIn] = useState(false);\n  const [userType, setUserType] = useState('');\n\n  const handleLogin = async () => {\n    setLoggedIn(true);\n\n    // Simulated fetch, replace it with your actual logic\n    setUserType('userType');\n  };\n\n  const handleLogout = () => {\n    setLoggedIn(false);\n    // Simulated fetch, replace it with your actual logout logic\n    // fetch('/logout', {\n    //   method: 'POST',\n    // });\n\n    // Redirect to the login page\n    return <Navigate to=\"/LoginForm\" replace />;\n  };\n\n  return (\n    <div>\n      <Router>\n        <Navbar isLoggedIn={isLoggedIn} onLogout={handleLogout} userType={userType} />\n        \n        {/* Use the Routes component to define your routes */}\n        <Routes>\n          {/* RoutesConfig should render the appropriate components based on the isLoggedIn state */}\n          <Route\n            path=\"/*\"\n            element={<RoutesConfig isLoggedIn={isLoggedIn} handleLogin={handleLogin} />}\n          />\n\n          {/* Define a route for the login form */}\n          <Route path=\"/LoginForm\" element={<LoginForm />} />\n        </Routes>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAKA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,IAAIC,MAAM,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AACnF,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,YAAY,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMiB,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9BH,WAAW,CAAC,IAAI,CAAC;;IAEjB;IACAE,WAAW,CAAC,UAAU,CAAC;EACzB,CAAC;EAED,MAAME,YAAY,GAAGA,CAAA,KAAM;IACzBJ,WAAW,CAAC,KAAK,CAAC;IAClB;IACA;IACA;IACA;;IAEA;IACA,oBAAOJ,OAAA,CAACP,QAAQ;MAACgB,EAAE,EAAC,YAAY;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC7C,CAAC;EAED,oBACEd,OAAA;IAAAe,QAAA,eACEf,OAAA,CAACR,MAAM;MAAAuB,QAAA,gBACLf,OAAA,CAACH,MAAM;QAACM,UAAU,EAAEA,UAAW;QAACa,QAAQ,EAAER,YAAa;QAACH,QAAQ,EAAEA;MAAS;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAG9Ed,OAAA,CAACN,MAAM;QAAAqB,QAAA,gBAELf,OAAA,CAACL,KAAK;UACJsB,IAAI,EAAC,IAAI;UACTC,OAAO,eAAElB,OAAA,CAACF,YAAY;YAACK,UAAU,EAAEA,UAAW;YAACI,WAAW,EAAEA;UAAY;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7E,CAAC,eAGFd,OAAA,CAACL,KAAK;UAACsB,IAAI,EAAC,YAAY;UAACC,OAAO,eAAElB,OAAA,CAACJ,SAAS;YAAAe,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACZ,EAAA,CAzCQD,GAAG;AAAAkB,EAAA,GAAHlB,GAAG;AA2CZ,eAAeA,GAAG;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}