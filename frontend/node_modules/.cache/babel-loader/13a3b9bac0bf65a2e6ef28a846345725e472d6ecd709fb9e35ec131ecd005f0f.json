{"ast":null,"code":"\n// import { BrowserRouter as Router, Navigate, Redirect} from 'react-router-dom';\n// import { useEffect, useState } from 'react';\n// import Navbar from './Components/Navbar';\n// import LoginForm from './Components/LoginForm';\n// import RoutesConfig from './Routes'; \n// import './App.css';\n// import FlightSearch from './Components/FlightSearch';\n\n// function App() {\n\n//   const [isLoggedIn, setLoggedIn] = useState(false);\n//   const [userType, setUserType] = useState('');\n//   // const navigate = useNavigate();\n\n//   const handleLogin = async () => {\n//     setLoggedIn(true);\n\n//     const response = await fetch('/getUserType', {\n//       method: 'GET',\n//     });\n\n//     if (response.status === 200){\n//       console.log(\"ASDASD\");\n//       const responseData = await response.json();\n//       setUserType(responseData['userType']);\n//     }\n//   };\n\n//   const handleLogout = () => {\n\n//     setLoggedIn(false);\n//     fetch('/logout', {\n//       method: 'POST',\n//     });\n\n//     // navigate('/LoginForm');\n\n//     return <Navigate to=\"/LoginForm\" replace/>\n//   };\n\n//   return (\n//     <div>\n//       <Router>\n\n//         <Navbar isLoggedIn={isLoggedIn ? true : false} onLogout={handleLogout} userType={userType}/>\n\n//         <RoutesConfig isLoggedIn = {isLoggedIn ? true : false} handleLogin= {handleLogin} />\n//       </Router>\n//     </div>\n//   );\n// }\n// export default App;","map":{"version":3,"names":[],"sources":["C:/Users/danqw/OneDrive/Desktop/school/DB/Airline-Ticketing-Service/frontend/src/App.js"],"sourcesContent":["\n// import { BrowserRouter as Router, Navigate, Redirect} from 'react-router-dom';\n// import { useEffect, useState } from 'react';\n// import Navbar from './Components/Navbar';\n// import LoginForm from './Components/LoginForm';\n// import RoutesConfig from './Routes'; \n// import './App.css';\n// import FlightSearch from './Components/FlightSearch';\n\n\n// function App() {\n\n//   const [isLoggedIn, setLoggedIn] = useState(false);\n//   const [userType, setUserType] = useState('');\n//   // const navigate = useNavigate();\n\n  \n//   const handleLogin = async () => {\n//     setLoggedIn(true);\n\n//     const response = await fetch('/getUserType', {\n//       method: 'GET',\n//     });\n\n//     if (response.status === 200){\n//       console.log(\"ASDASD\");\n//       const responseData = await response.json();\n//       setUserType(responseData['userType']);\n//     }\n//   };\n\n//   const handleLogout = () => {\n\n//     setLoggedIn(false);\n//     fetch('/logout', {\n//       method: 'POST',\n//     });\n\n//     // navigate('/LoginForm');\n\n//     return <Navigate to=\"/LoginForm\" replace/>\n//   };\n\n\n\n\n//   return (\n//     <div>\n//       <Router>\n      \n//         <Navbar isLoggedIn={isLoggedIn ? true : false} onLogout={handleLogout} userType={userType}/>\n\n//         <RoutesConfig isLoggedIn = {isLoggedIn ? true : false} handleLogin= {handleLogin} />\n//       </Router>\n//     </div>\n//   );\n// }\n// export default App;\n"],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAKA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}